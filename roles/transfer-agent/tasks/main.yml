---
- block:

  - name: Create agents group
    group:
      name: "{{ agent_group }}"
      state: present

  - name: Create xfer user
    user:
      name: "{{ agent_name }}"
      shell: /bin/sh
      groups: agents

  - name: Add pubkeys from current user
    authorized_key:
      user: "{{ agent_name }}"
      state: present
      key: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"
    # TODO: https://github.com/stoptracking/playbook/issues/18
    when: pubkey_from_current_user and ansible_connection == "local"

  - name: Add other pubkeys
    authorized_key:
      user: "{{ agent_name }}"
      state: present
      # Lookup is necessary as `authorized_key` expects content, not a file.
      key: "{{ lookup('file',item) }}"
    with_fileglob:
      - "*.pub"
    when: pubkey_from_others

  - name: chmod/chown homedir to make jail valid
    file:
      path: /home/{{ agent_name }}
      state: directory
      mode: 0755
      owner: root

  - name: Create data exchange directory
    file:
      path: /home/{{ agent_name }}/data
      state: directory
      mode: 0755
      owner: "{{ agent_name }}"

  - name: Create system root dirs within chroot
    file:
      path: /home/{{ agent_name }}/{{ item }}
      state: directory
      owner: root
    with_items:
      - usr
      - usr/bin
      - bin
      - lib
      - lib/x86_64-linux-gnu
      - lib64

  - name: Copy sh to chroot /bin
    copy:
      src: "/bin/sh"
      dest: "/home/{{ agent_name }}/bin/sh"
      mode: 0755
      remote_src: yes

  - name: Copy rsync to chroot /usr/bin
    copy:
      src: "/usr/bin/rsync"
      dest: "/home/{{ agent_name }}/usr/bin/rsync"
      mode: 0755
      remote_src: yes
    when: rsync

  - name: Copy necessary libraries
    copy:
      src: "/lib/x86_64-linux-gnu/{{ item.src }}"
      dest: "/home/{{ agent_name }}/lib/x86_64-linux-gnu/{{ item.dest }}"
      mode: 0755
      remote_src: yes
    with_items:
      - { src: "libattr.so.1", dest: "libattr.so.1" }
      - { src: "libacl.so.1", dest: "libacl.so.1" }
      - { src: "libpopt.so.0", dest: "libpopt.so.0" }
      - { src: "libc.so.6", dest: "libc.so.6" }
    when: not WSL1 and not WSL2

  - name: Copy necessary libraries
    copy:
      src: "/usr/lib/x86_64-linux-gnu/{{ item.src }}"
      dest: "/home/{{ agent_name }}/lib/x86_64-linux-gnu/{{ item.dest }}"
      mode: 0755
      remote_src: yes
    with_items:
      - { src: "libattr.so.1", dest: "libattr.so.1" }
      - { src: "libacl.so.1", dest: "libacl.so.1" }
      - { src: "libpopt.so.0", dest: "libpopt.so.0" }
    when: WSL1 or WSL2

  - name: Copy libc
    copy:
      src: "/lib/x86_64-linux-gnu/libc.so.6"
      dest: "/home/{{ agent_name }}/lib/x86_64-linux-gnu/libc.so.6"
      remote_src: yes
    when: WSL1 or WSL2

  - name: Copy ld-linux-x86-64.so
    copy:
      src: "/lib64/ld-linux-x86-64.so.2"
      dest: "/home/{{ agent_name }}/lib64/ld-linux-x86-64.so.2"
      mode: 0755
      remote_src: yes

  become: yes
