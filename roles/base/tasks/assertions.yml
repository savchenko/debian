---
- name: Assert that we are running against the supported distribution
  assert:
    that:
      - ansible_distribution == "Debian"
      - ansible_distribution_file_variety == "Debian"
      - ansible_distribution_release == "bullseye"
      - ( ansible_distribution_major_version | int ) == 0 # TODO: Replace with "11" once Bullseye is out
    fail_msg: 'This playbook is tested exclusively on Debian Bullseye.\nPlease double-check you are executing the right thing.'
    success_msg: 'Running against Debian Bullseye at {{ ansible_host }}'

- block:

  - name: Assert that desirable hostname is valid
    assert:
      that: inventory_hostname is regex('^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$')
      fail_msg: 'Requested hostname is invalid.\nSee the RFC #1123'
      success_msg: 'Will set target hostname to "{{ inventory_hostname }}"'
    when: inventory_hostname | string | length > 0

  when: set_hostname

- name: Register user's home folder status
  stat:
    path: '{{ ansible_facts.user_dir }}'
  register: user_homedir

- name: Check if this is UEFI boot
  shell:
    cmd: '[ -d /sys/firmware/efi ] && echo True || echo False'
  register: base_bootmode
  changed_when: false

- name: Ensure `mokutil` is installed
  apt:
    name: mokutil
    state: present
  when: base_bootmode.stdout | bool

- name: Register Secure Boot status
  shell:
    cmd: 'mokutil --sb-state | grep "^SecureBoot enabled$"'
  register: sb_status
  changed_when: false
  failed_when: false
  when: base_bootmode.stdout | bool

- name: Enable module signing verification
  set_fact:
    sig_enforce: 'module.sig_enforce=1'
  when:
    - base_bootmode.stdout | bool
    - set_sigenforce
    - sb_status.rc == 0

- name: Assert the facts about user's home folder
  assert:
    that:
      - ansible_facts.user_dir == ansible_env.HOME
      - user_homedir.stat.writeable and user_homedir.stat.readable
    fail_msg: '$HOME resolves differently or homedir of the target user isn not writeable'
